<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">


<!-- DispatcherServlet가 참고해야하는 구조. beans가 있다 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/image/**" location="/resources/image/" />
	
	
<!--모든화면은 /WEB-INF/views/ 안에있고  확장자는 .jsp  -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
<!-- DS는 동작과 동시에 어노테이션에 해당하는것들을 객체로만든다. -->	
	<context:component-scan base-package="edu.board.controller" />
	<context:component-scan base-package="edu.board.service" />
	<context:component-scan base-package="edu.board.dao" />
	
<!-- 사진 업로드 가능하도록 multipartResolver 사용하기 -->
	<!--  spring-upload -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	<!--  spring-upload -->

	
	
</beans:beans>
